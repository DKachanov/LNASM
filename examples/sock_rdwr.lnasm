#append NASMLibs/stdf64.asm
#append NASMLibs/stdio64.asm
#append NASMLibs/stringf64.asm
#append NASMLibs/file64.asm
#append NASMLibs/socket64.asm

#syntax PyLibs/socket.py
#global _start

const mode = 666o

::_start
    
    socketAddr SA[socket.AF_INET, 127.0.0.1, 3001, 0]
    const SA.len = $ - SA

    string data = "hello"
    const data.len = $ - data

    RES byte buffer[255]

    qword sock = 0

    socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)
    rax -> [sock]
    socket.connect(qword [sock], SA, SA.len)

    socket.sendto(qword [sock], data, data.len, SA, SA.len, 0)
    socket.recvfrom(qword [sock], buffer, 255, SA, SA.len, 0)
    stringf.len(buffer)
    stdio.print(buffer, rax)

    socket.close(qword [sock], socket.SHUT_RDWR)

::end
    stdf.exit(0)